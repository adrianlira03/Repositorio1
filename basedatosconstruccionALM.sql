--AQUI BORRAMOS LAS TABLAS POR SI TENEMOS ALGUNA IGUAL QUE NO NOS DE PROBLEMAS--

DROP TABLE JEFE CASCADE CONSTRAINTS;
DROP TABLE CLIENTE CASCADE CONSTRAINTS;
DROP TABLE OFICIAL CASCADE CONSTRAINTS;
DROP TABLE OBRA CASCADE CONSTRAINTS;
DROP TABLE PEON CASCADE CONSTRAINTS;
DROP TABLE CAPATAZ CASCADE CONSTRAINTS;



--AQUI CREAMOS LAS 6 TABLAS--

CREATE TABLE JEFE
(
NIF VARCHAR2(9) CONSTRAINT JEF_NIF_PK PRIMARY KEY,
NOMBRE VARCHAR2(15) NOT NULL,
APELLIDO1 VARCHAR2(20) NOT NULL,
APELLIDO2 VARCHAR2(15),
NUM_CAPATACES NUMBER(4) 
);

CREATE TABLE CLIENTE 
(
NIF VARCHAR2(9) CONSTRAINT CLI_NIF_PK PRIMARY KEY,
NOMBRE VARCHAR2(15) NOT NULL,
APELLIDO1 VARCHAR2(20),
DIRECCION VARCHAR2(20) CONSTRAINT CLI_DIR_UK UNIQUE,
NIF_JEFE VARCHAR2(9) CONSTRAINT CLIE_NIF_FK REFERENCES JEFE
);



CREATE TABLE CAPATAZ
(
NIF VARCHAR2(9) CONSTRAINT CAP_NIF_PK PRIMARY KEY ,
NOMBRE VARCHAR2(15) NOT NULL,
APELLIDO1 VARCHAR2(20) NOT NULL,
APELLIDO2 VARCHAR2(15),
SUELDO NUMBER(4) DEFAULT 2200,
NIF_JEFE VARCHAR2(9) CONSTRAINT CAP_NIJ_FK REFERENCES JEFE

);

CREATE TABLE OBRA
(
COD NUMBER(6) CONSTRAINT OBR_COD_PK PRIMARY KEY,
DESCRIPCION VARCHAR2(100),
PRESUPUESTO NUMBER (8),
NIF_JEFE VARCHAR2(9) CONSTRAINT OBR_NIJ_FK REFERENCES JEFE,
NIF_CAPATAZ VARCHAR2(9) CONSTRAINT OBR_NIC_FK REFERENCES CAPATAZ,
NIF_CLIENTE VARCHAR2(9) CONSTRAINT OBR_NIL_FK REFERENCES CLIENTE
);

CREATE TABLE OFICIAL 
(
NIF VARCHAR2(9) CONSTRAINT OFI_NIF_PK PRIMARY KEY,
NOMBRE VARCHAR2(15) NOT NULL,
APELLIDO1 VARCHAR2(15) NOT NULL,
APELLIDO2 VARCHAR2(15),
NIF_CAPATAZ VARCHAR2(9) CONSTRAINT OFI_NIC_FK REFERENCES CAPATAZ,
SUELDO NUMBER(4) DEFAULT 1800 
);



CREATE TABLE PEON 
(

NIF VARCHAR2(9) CONSTRAINT PEO_NIF_PK PRIMARY KEY,
NOMBRE VARCHAR2(15) NOT NULL,
APELLIDO1 VARCHAR2(15) NOT NULL,
APELLIDO2 VARCHAR2(15),
NIF_OFICIAL VARCHAR2(9) CONSTRAINT PEO_NIF_FK REFERENCES OFICIAL
);


--MODIFICAMOS LAS TABLAS--

ALTER TABLE CAPATAZ ADD CONSTRAINT CAP_SUE_CK CHECK (SUELDO BETWEEN 1700 AND 2300);
ALTER TABLE PEON ADD SUELDO NUMBER(4);
ALTER TABLE PEON ADD CONSTRAINT PEO_SUE_CK CHECK (SUELDO BETWEEN 950 AND 1500);
ALTER TABLE OFICIAL  ADD  CONSTRAINT OFI_SUE_CK CHECK (SUELDO BETWEEN 1400 AND 1950);





--INSERTAMOS LOS VALORES EN LAS TABLAS--

INSERT INTO JEFE VALUES('28457415G','Juan','Gomez', 'Bernal',5);
INSERT INTO JEFE VALUES('47854157H', 'Nuria',' Vazquez', 'Nuñez', 7);

INSERT INTO CLIENTE VALUES('15745654J','Maria','Lopez', 'C/ Alberche nº3','28457415G');
INSERT INTO CLIENTE VALUES('85471254P','Luis','Ruiz', 'Av.La Palmera nº10','28457415G');
INSERT INTO CLIENTE VALUES('75214875L','Pablo','Garcia', 'C/  Umbria nº54','47854157H');
INSERT INTO CLIENTE VALUES('45248745K','Lucia','Lora', 'C/ Playa nº9','28457415G');
INSERT INTO CLIENTE VALUES('78541268T','Paula','Espinola', 'Av. Alcalde nº26','47854157H');
INSERT INTO CLIENTE VALUES('24785965T','Isaac','Rodriguez', 'C/ Estrella nº4','47854157H');

 
INSERT INTO CAPATAZ VALUES('65214524K','Laura','Lora', 'Garcia',2200,'28457415G');
INSERT INTO CAPATAZ VALUES('63241589J','Julio','Ruiz', 'Conde',2250,'28457415G');
INSERT INTO CAPATAZ VALUES('12457896M','Luis','Vasco','Calvo', 2100,'47854157H');
INSERT INTO CAPATAZ VALUES('95647812D','Estrella','Rodriguez', 'Conde',2150,'47854157H');


INSERT INTO OBRA VALUES(254, 'Lenvantar Chalet', 256300, '47854157H','95647812D', '85471254P');
INSERT INTO OBRA VALUES(364, 'hacer segunda planta ', 90000, '47854157H','63241589J', '45248745K');

INSERT INTO OFICIAL VALUES('25478126J', 'Luis', 'Lopez', 'Conde', '65214524K', 1900);
INSERT INTO OFICIAL VALUES('85278126L', 'Carlos', 'Ruiz', 'Ortiz', '63241589J', 1920);
INSERT INTO OFICIAL VALUES('47512547F', 'Pablo', 'Nuñez', 'Perez', '65214524K', 1800);
INSERT INTO OFICIAL VALUES('94521478T', 'Rafael', 'Lora', 'Sayago', '95647812D', 1900);
INSERT INTO OFICIAL VALUES('68745214N', 'Saul', 'Cardeno', 'Tirado', '65214524K', 1700);
INSERT INTO OFICIAL VALUES('32548741Q', 'Pedro', 'Poden', 'Vietn', '63241589J', 1850);


INSERT INTO PEON VALUES('59874514G', 'Hugo', 'Lucas', 'Palomar', '25478126J', 1300);
INSERT INTO PEON VALUES('45781236J', 'Jose', 'Olmo', 'Garcia', '85278126L', 1350);
INSERT INTO PEON VALUES('25412541L', 'Fernando', 'Bernal', 'Perez', '68745214N',1250);


-- AQUI EMPEZAMOS CON PL/SQL--

--ESTOS SON LOS PROCEDIMIENTOS QUE HE REALIZADO--


-- ESTE PROCEDIMIENTO SE LLAMA VER OFICIAL Y CONSISTE EN INSERTAR EL DNI DE UN OFICIAL Y NOS LISTA TODOS LOS DATOS DE ESE OFICIAL--
CREATE  OR REPLACE PROCEDURE VEROFICIAL(DNI VARCHAR2) 
IS
REGISTRO OFICIAL%ROWTYPE; --AQUI CREAMOS EL REGISTRO DEL CURSOR IMPLICITO, UTILIZAMOS EL CUROSR IMPLICITO PORQUE SOLO NOS DEVUELVE UNA LINEA--
BEGIN
SELECT * INTO REGISTRO FROM OFICIAL  WHERE DNI=NIF;-- ESTA ES LA CONMSULTA DEL CURSOR--
DBMS_OUTPUT.PUT_LINE ('NIF: ' || REGISTRO.NIF); -- AQUI ESCRBIMOS TODOS LOS DATOS DEL OFICIAL--
DBMS_OUTPUT.PUT_LINE ('NOMBRE: ' || REGISTRO.NOMBRE);
DBMS_OUTPUT.PUT_LINE ('APELLIDO1: ' || REGISTRO.APELLIDO1);
DBMS_OUTPUT.PUT_LINE ('APELLIDO2: ' || REGISTRO.APELLIDO2);
DBMS_OUTPUT.PUT_LINE ('NIF_CAPATAZ ' || REGISTRO.NIF_CAPATAZ);
DBMS_OUTPUT.PUT_LINE ('SUELDO: ' || REGISTRO.SUELDO);
DBMS_OUTPUT.PUT_LINE (' ---- ');
EXCEPTION
WHEN NO_DATA_FOUND THEN -- AQUI CREAMOS UNA EXCEPCION POR SI INTRODUCE UN DNI QUE NO EXISTE NOS SALTE ESTE MENSAJE--
DBMS_OUTPUT.PUT_LINE ('NO SE HA ENCONTRADO EL DNI DEL OFICIAL');
END VEROFICIAL;
/

-- ESTE PROCEDIMIENTO SE LLAMA VERCAPATAZ Y ES IGUAL QUE EL ANTERIOR PERO EN VEZ DE VER LOS OFICIALES VEMOS LOS CAPATACES, ESTE PROCEDIMIENTO ESTA IGUAL RELIZADO QUE EL ANTERIOR PERO CON LOS DATOS DE LOS CAPATACES--
CREATE  OR REPLACE PROCEDURE VERCAPATAZ (DNI VARCHAR2) IS
REGISTRO CAPATAZ%ROWTYPE;
BEGIN
SELECT * INTO REGISTRO FROM  CAPATAZ WHERE DNI=NIF ;
DBMS_OUTPUT.PUT_LINE ('NIF: ' || REGISTRO.NIF);
DBMS_OUTPUT.PUT_LINE ('NOMBRE: ' || REGISTRO.NOMBRE);
DBMS_OUTPUT.PUT_LINE ('APELLIDO1: ' || REGISTRO.APELLIDO1);
DBMS_OUTPUT.PUT_LINE ('APELLIDO2: ' || REGISTRO.APELLIDO2);
DBMS_OUTPUT.PUT_LINE ('NIF_JEFE: ' || REGISTRO.NIF_JEFE);
DBMS_OUTPUT.PUT_LINE ('SUELDO: ' || REGISTRO.SUELDO);
DBMS_OUTPUT.PUT_LINE (' ---- ');
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE ('NO SE HA ENCONTRADO EL DNI DEL CAPATAZ');
END VERCAPATAZ;
/


-- ESTE PROCEDIMIENTO SE LLAMA VERPEON Y ES IGUAL QUE EL VEROFICIAL PERO EN VEZ DE VER LOS OFICIALES VEMOS LOS PEONES, ESTE PROCEDIMIENTO ESTA IGUAL RELIZADO QUE EL VEROFICIAL PERO CON LOS DATOS DE LOS PEONES--

CREATE  OR REPLACE PROCEDURE VERPEON(DNI VARCHAR2)
IS
REGISTRO PEON%ROWTYPE;
BEGIN
SELECT * INTO REGISTRO FROM PEON WHERE DNI=NIF;
DBMS_OUTPUT.PUT_LINE ('NIF: ' || REGISTRO.NIF);
DBMS_OUTPUT.PUT_LINE ('NOMBRE: ' || REGISTRO.NOMBRE);
DBMS_OUTPUT.PUT_LINE ('APELLIDO1: ' || REGISTRO.APELLIDO1);
DBMS_OUTPUT.PUT_LINE ('APELLIDO2: ' || REGISTRO.APELLIDO2);
DBMS_OUTPUT.PUT_LINE ('NIF_JEFE: ' || REGISTRO.NIF_OFICIAL);
DBMS_OUTPUT.PUT_LINE ('SUELDO: ' || REGISTRO.SUELDO);
DBMS_OUTPUT.PUT_LINE (' ---- ');
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE ('NO SE HA ENCONTRADO EL DNI DEL PEON');
END VERPEON;
/


-- ESTAS SON LAS FUNCIONES QUE HE REALIZADO-- 
-- ESTA FUNCION SE LLAMA JEFE_NIF Y CONSISTE EN IN INSERTAR UN DNI DE  UN JEFE  Y NOS DEVUELVE EL NOMBRE DEL JEFE--

CREATE OR REPLACE FUNCTION JEFE_NIF (NIF_JEFE VARCHAR2) 
RETURN VARCHAR2 IS
CURSOR CEMPLEADO IS --AQUI CREAMOS EL CURSOR EXPLICITO--
SELECT * FROM JEFE WHERE NIF_JEFE LIKE NIF; --ESTA ES LA CONSULTA DEL CURSOR -- SELECCIONAMOS TODOS LOS DATOS DEL JEFE QUE EL DNI QUE INTRODUZAMOS SEA IGUAL AL SUYO--
REGISTRO CEMPLEADO%ROWTYPE; -- CREAMOS EL REGISTRO DEL CURSOR--
BEGIN
OPEN CEMPLEADO;-- AQUI REALIZAMOS EL BUCLE DEL CURSOR--
LOOP
FETCH CEMPLEADO INTO REGISTRO;
EXIT WHEN CEMPLEADO%NOTFOUND;
END LOOP;
CLOSE CEMPLEADO;
RETURN REGISTRO.NOMBRE; --AQUI DEVOLVEMOS EL NOMBRE DEL JEFE--
END JEFE_NIF ;
/

-- ESTA FUNCION ES OBRA_COD Y ES IGUAL A LA ANTERIOR PERO AQUI INSERTAMOS EL CODIGO DE LA OBRA Y NOS DEVUELVE LA DESCRIPCION DE ESA OBRA--

CREATE OR REPLACE FUNCTION OBRA_COD (COD_OBRA VARCHAR2) 
RETURN VARCHAR2 IS
CURSOR CEMPLEADO IS
SELECT DESCRIPCION FROM OBRA WHERE COD_OBRA LIKE COD;
REGISTRO CEMPLEADO%ROWTYPE;
BEGIN
OPEN CEMPLEADO;
LOOP
FETCH CEMPLEADO INTO REGISTRO;
EXIT WHEN CEMPLEADO%NOTFOUND;
END LOOP;
CLOSE CEMPLEADO;
RETURN REGISTRO.DESCRIPCION;
END OBRA_COD ;
/

-- ESTA FUNCION ES CLIENTE_NIF Y ES IGUAL A LA FUNCION JEFE_NIF PERO AQUI INSERTAMOS EL DNI DEL CLIENTE Y NOS DEVUELVEEL NOMBRE DE ESE CLIENTE--

CREATE OR REPLACE FUNCTION CLIENTE_NIF (NIF_CLIENTE VARCHAR2) 
RETURN VARCHAR2 IS
CURSOR CEMPLEADO IS
SELECT NOMBRE FROM CLIENTE WHERE NIF_CLIENTE LIKE NIF;
REGISTRO CEMPLEADO%ROWTYPE;
BEGIN
OPEN CEMPLEADO;
LOOP
FETCH CEMPLEADO INTO REGISTRO;
EXIT WHEN CEMPLEADO%NOTFOUND;
END LOOP;
CLOSE CEMPLEADO;
RETURN REGISTRO.NOMBRE; 
END CLIENTE_NIF ;
/

-- ESTE ES EL BLOQUE ANONIMO, ESTE BLOQYE ANONIMO SONSISTE EN UTILIZAR TODOS LOS PROCEDIMIRNOTS Y FUNVIONES Y VER COSAS DE TODAS LAS TABLAS--

DECLARE
CURSOR OFI IS --AQUI CREAMOS TODOS LOS CURSORES Y SUS REGISTROS--
SELECT NIF FROM OFICIAL;
REGISTRO1 OFI%ROWTYPE;
CURSOR CAPA IS
SELECT NIF FROM CAPATAZ;
REGISTRO2 CAPA%ROWTYPE;
CURSOR PE IS
SELECT NIF FROM PEON;
REGISTRO3 PE%ROWTYPE;
CURSOR JEF IS
SELECT NIF FROM JEFE;
REGISTRO4 JEF%ROWTYPE;
CURSOR OB IS
SELECT COD FROM OBRA;
REGISTRO5 OB%ROWTYPE;
CURSOR  CLI IS
SELECT NIF FROM CLIENTE;
REGISTRO6 CLI%ROWTYPE;
BEGIN 
DBMS_OUTPUT.PUT_LINE ('ESTOS SON TODOS LOS OFICIALES:'); -- AQUI UTILIZAMOS EL METODO VEROFICIAL Y MEDIANTE EL CURSOR QUE HEMOS CREADO Y ESTE BUCLE PUES NOS LISTA TODOS LOS  DNI Y  NOS LO INSERTA EN EL PROCEDIMIENTO--
DBMS_OUTPUT.PUT_LINE ('    ');
OPEN OFI;
LOOP
FETCH OFI INTO REGISTRO1;
EXIT WHEN OFI%NOTFOUND;
VEROFICIAL(REGISTRO1.NIF);
END LOOP;
CLOSE OFI;
DBMS_OUTPUT.PUT_LINE ('    ');
DBMS_OUTPUT.PUT_LINE ('ESTOS SON TODOS LOS CAPATACES:');  -- ESTE ES IGUAL QUE EL ANTERIOR PERO AQUI UTILIZAMOS VERCAPATAZ Y NOS VISUALIZA TODOS LOS CAPATACES-- 
DBMS_OUTPUT.PUT_LINE ('    ');
OPEN CAPA;
LOOP
FETCH CAPA INTO REGISTRO2;
EXIT WHEN CAPA%NOTFOUND;
VERCAPATAZ(REGISTRO2.NIF);
END LOOP;
CLOSE CAPA;
DBMS_OUTPUT.PUT_LINE ('    ');
DBMS_OUTPUT.PUT_LINE ('ESTOS SON TODOS LOS PEONES:'); -- ESTE ES IGUAL QUE EL ANTERIOR PERO AQUI UTILIZAMOS VERPEON Y NOS VISUALIZA TODOS LOS PEONES--
DBMS_OUTPUT.PUT_LINE ('    ');
OPEN PE;
LOOP
FETCH PE INTO REGISTRO3;
EXIT WHEN PE%NOTFOUND;
VERPEON(REGISTRO3.NIF);
END LOOP;
CLOSE PE;
DBMS_OUTPUT.PUT_LINE ('    ');
DBMS_OUTPUT.PUT_LINE ('ESTOS SON TODOS LOS NOMBRES DE LOS JEFES:');  -- AQUI UTILIZAMOS LA FUNCION JEFE_NIF Y MEDIANTE EL CURSOR Y EL BUCLE NOS INSERTA TODOS LOS DNI EN LA FUNCION Y NOS LISTA TODOS LOS NOMBRES DE LOS JEFES--
DBMS_OUTPUT.PUT_LINE ('    ');
OPEN JEF;
LOOP
FETCH JEF INTO REGISTRO4;
EXIT WHEN JEF%NOTFOUND;
DBMS_OUTPUT.PUT_LINE('NIF: '||REGISTRO4.NIF );
DBMS_OUTPUT.PUT_LINE('NOMBRE: '||JEFE_NIF(REGISTRO4.NIF));
DBMS_OUTPUT.PUT_LINE('        ');
END LOOP;
CLOSE JEF;
DBMS_OUTPUT.PUT_LINE ('    ');
DBMS_OUTPUT.PUT_LINE ('ESTOS SON TODAS LAS DESCRIPCIONES DE LAS OBRAS:'); -- ESTE ES IGUAL QUE EL ANTERIOR PERO AQUI UTILIZAMOS OBRA_COD Y EL BUCLE LE VA INSERTANDO LOS CODIGOD DE LAS OBRAS Y NOS VA LISTANDO LA DESCRIPCION DE LAS OBRAS--
DBMS_OUTPUT.PUT_LINE ('    ');
OPEN OB;
LOOP
FETCH OB INTO REGISTRO5;
EXIT WHEN OB%NOTFOUND;
DBMS_OUTPUT.PUT_LINE('COD: '||REGISTRO5.COD );
DBMS_OUTPUT.PUT_LINE('DESCRIPCION: '||OBRA_COD(REGISTRO5.COD));
DBMS_OUTPUT.PUT_LINE('        ');
END LOOP;
CLOSE OB;
DBMS_OUTPUT.PUT_LINE ('    ');
DBMS_OUTPUT.PUT_LINE ('ESTOS SON TODOS LOS NOMBRES DE LOS CLIENTES:');  -- ESTE ES IGUAL QUE EL ANTERIOR PERO AQUI INSERTAMOS MEDINATE EL CUROS Y EL BUCLE TODOS LOS DNI Y NOS VA DICIENDO TODOS LOS NOMBRES DE LOS CLIENTES--
DBMS_OUTPUT.PUT_LINE ('    ');
OPEN CLI;
LOOP
FETCH CLI INTO REGISTRO6;
EXIT WHEN CLI%NOTFOUND;
DBMS_OUTPUT.PUT_LINE('NIF: '||REGISTRO6.NIF );
DBMS_OUTPUT.PUT_LINE('NOMBRE: '||CLIENTE_NIF(REGISTRO6.NIF));
DBMS_OUTPUT.PUT_LINE('        ');
END LOOP;
CLOSE CLI;
END;
/
-- Y YA ACABARIA EL BLOQUE ANÓNIMO--